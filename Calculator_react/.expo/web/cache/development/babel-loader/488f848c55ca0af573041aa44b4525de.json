{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\laragon\\\\www\\\\Methodes-devmob\\\\Calculator_react\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Style from \"./src/Style\";\nimport InputButton from \"./src/InputButton\";\nvar inputButtons = [[\"CE\", \"C\"], [1, 2, 3, '/'], [4, 5, 6, '*'], [7, 8, 9, '-'], [0, '.', '=', '+']];\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\n\nvar ReactCalculator = function (_Component) {\n  _inherits(ReactCalculator, _Component);\n\n  var _super = _createSuper(ReactCalculator);\n\n  function ReactCalculator(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCalculator);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      previousInputValue: 0,\n      inputValue: 0,\n      selectedSymbol: null,\n      point: false,\n      previousPoint: 0\n    };\n    return _this;\n  }\n\n  _createClass(ReactCalculator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: Style.rootContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: Style.displayContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: Style.displayText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }, this.state.inputValue)), React.createElement(View, {\n        style: Style.inputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, this._renderInputButtons()));\n    }\n  }, {\n    key: \"_renderInputButtons\",\n    value: function _renderInputButtons() {\n      var views = [];\n\n      for (var r = 0; r < inputButtons.length; r++) {\n        var row = inputButtons[r];\n        var inputRow = [];\n\n        for (var i = 0; i < row.length; i++) {\n          var input = row[i];\n          inputRow.push(React.createElement(InputButton, {\n            value: input,\n            onPress: this._onInputButtonPressed.bind(this, input),\n            key: r + \"-\" + i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }\n          }));\n        }\n\n        views.push(React.createElement(View, {\n          style: Style.inputRow,\n          key: \"row-\" + r,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 24\n          }\n        }, inputRow));\n      }\n\n      return views;\n    }\n  }, {\n    key: \"_onInputButtonPressed\",\n    value: function _onInputButtonPressed(input) {\n      switch (typeof input) {\n        case 'number':\n          return this._handleNumberInput(input);\n\n        case 'string':\n          if (input != \".\") {\n            return this._handleStringInput(input);\n          } else {\n            return this._handlePointInput();\n          }\n\n      }\n    }\n  }, {\n    key: \"_handleNumberInput\",\n    value: function _handleNumberInput(num) {\n      if (typeof this.state.inputValue == 'string') {\n        this.state.inputValue = 0;\n        inputValue = this.state.inputValue * 10 + num;\n      }\n\n      if (this.state.point == true) {\n        var x = this.state.previousPoint + 1;\n        var dividande = Math.pow(10, x);\n        var inputValue = num / dividande + this.state.inputValue;\n        this.state.previousPoint += 1;\n      } else {\n        inputValue = this.state.inputValue * 10 + num;\n      }\n\n      this.setState({\n        inputValue: inputValue\n      });\n    }\n  }, {\n    key: \"_handlePointInput\",\n    value: function _handlePointInput() {\n      this.state.point = true;\n    }\n  }, {\n    key: \"_handleStringInput\",\n    value: function _handleStringInput(str) {\n      this.state.point = false;\n      this.state.previousPoint = 0;\n\n      switch (str) {\n        case '/':\n        case '*':\n        case '+':\n        case '-':\n          this.setState({\n            selectedSymbol: str,\n            previousInputValue: this.state.inputValue,\n            inputValue: 0\n          });\n          break;\n\n        case '=':\n          var symbol = this.state.selectedSymbol,\n              inputValue = this.state.inputValue,\n              previousInputValue = this.state.previousInputValue;\n\n          if (!symbol) {\n            return;\n          } else if (symbol == '/' && inputValue == 0) {\n            this.setState({\n              previousInputValue: 0,\n              inputValue: \"Alexandre ?\",\n              selectedSymbol: null\n            });\n            break;\n          } else {\n            this.setState({\n              previousInputValue: 0,\n              inputValue: eval(previousInputValue + symbol + inputValue),\n              selectedSymbol: null\n            });\n          }\n\n          break;\n\n        case 'CE':\n          inputValue = 0;\n          this.state.previousInputValue = 0;\n          this.setState({\n            inputValue: inputValue\n          });\n\n        case 'C':\n          inputValue = 0;\n          this.setState({\n            inputValue: inputValue\n          });\n      }\n    }\n  }]);\n\n  return ReactCalculator;\n}(Component);\n\nexport default ReactCalculator;","map":{"version":3,"sources":["E:/laragon/www/Methodes-devmob/Calculator_react/App.js"],"names":["Style","InputButton","inputButtons","React","Component","ReactCalculator","props","state","previousInputValue","inputValue","selectedSymbol","point","previousPoint","rootContainer","displayContainer","displayText","inputContainer","_renderInputButtons","views","r","length","row","inputRow","i","input","push","_onInputButtonPressed","bind","_handleNumberInput","_handleStringInput","_handlePointInput","num","x","dividande","Math","pow","setState","str","symbol","eval"],"mappings":"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","sourcesContent":["import Style from './src/Style';\nimport InputButton from './src/InputButton';\n\nconst inputButtons = [\n  [\"CE\", \"C\"],\n  [1, 2, 3, '/'],\n  [4, 5, 6, '*'],\n  [7, 8, 9, '-'],\n  [0, '.', '=', '+']\n];\n\nimport React, {\n  Component\n } from 'react';\n import {\n View,\n Text,\n AppRegistry\n } from 'react-native';\n class ReactCalculator extends Component {\n   render() {\n       return (\n        \n        <View style={Style.rootContainer}>\n                <View style={Style.displayContainer}>\n                    <Text style={Style.displayText}>{this.state.inputValue}</Text>\n                </View>\n                <View style={Style.inputContainer}>\n                    {this._renderInputButtons()}\n                </View>\n            </View>\n );\n }\n\n constructor(props) {\n  super(props);\n  \n  this.state = {\n    previousInputValue: 0,\n    inputValue: 0,\n    selectedSymbol: null,\n    point: false,\n    previousPoint : 0\n  }\n}\n \n  _renderInputButtons() {\n        let views = [];\n\n        for (var r = 0; r < inputButtons.length; r ++) {\n            let row = inputButtons[r];\n\n            let inputRow = [];\n            for (var i = 0; i < row.length; i ++) {\n                let input = row[i];\n\n                inputRow.push(\n                  <InputButton\n                      value={input}\n                      onPress={this._onInputButtonPressed.bind(this, input)}\n                      key={r + \"-\" + i}/>\n              );\n            }\n\n            views.push(<View style={Style.inputRow} key={\"row-\" + r}>{inputRow}</View>)\n        }\n\n        return views;\n    }\n\n    _onInputButtonPressed(input) {\n      switch (typeof input) {\n          case 'number':\n              return this._handleNumberInput(input)\n          case 'string':\n            if(input != \".\"){\n              return this._handleStringInput(input)\n            }else{\n                return this._handlePointInput()\n            }    \n      }\n  }\n\n  _handleNumberInput(num) {\n    if(typeof this.state.inputValue == 'string' ){\n      this.state.inputValue = 0;\n      inputValue = (this.state.inputValue * 10) + num;\n    }\n    if(this.state.point == true) {\n      let x = this.state.previousPoint + 1 ;\n      let dividande = Math.pow(10, x);\n      var inputValue = (num/dividande) + this.state.inputValue ;\n      this.state.previousPoint += 1;\n    }else{\n      inputValue = (this.state.inputValue * 10) + num;\n    }\n    this.setState({\n        inputValue: inputValue\n    })\n}\n_handlePointInput(){\n  this.state.point = true;\n}\n_handleStringInput(str) {\n  this.state.point = false;\n  this.state.previousPoint = 0;\n  switch (str) {\n      case '/':\n      case '*':\n      case '+':\n      case '-':\n          this.setState({\n              selectedSymbol: str,\n              previousInputValue: this.state.inputValue,\n              inputValue: 0\n          });\n          break;\n\n          case '=':\n            let symbol = this.state.selectedSymbol,\n                inputValue = this.state.inputValue,\n                previousInputValue = this.state.previousInputValue;\n\n            if (!symbol) {\n                return;\n            }else if(symbol == '/' && inputValue == 0){\n              this.setState({\n                previousInputValue: 0,\n                inputValue: \"Alexandre ?\",\n                selectedSymbol: null\n            });\n            break;\n            }else{\n              this.setState({\n                previousInputValue: 0,\n                inputValue: eval(previousInputValue + symbol + inputValue),\n                selectedSymbol: null\n            });\n            }\n          \n            break;\n\n            case 'CE': \n                        inputValue = 0;\n                        this.state.previousInputValue = 0;\n                        this.setState({\n                          inputValue: inputValue\n                        }) \n                  case 'C':\n                    inputValue = 0;\n                    this.setState({\n                      inputValue: inputValue\n                    })\n    }\n  }\n}\n\n \n export default ReactCalculator"]},"metadata":{},"sourceType":"module"}